传统关系数据库SQL（字符、描述）
1.先设计表
2.性能差  速度慢
3.查询能力强

新型数据库noSQL（not only SQL）



构建memcached服务
步骤一：构建memcached服务
1）使用yum安装软件包memcached
[root@proxy ~]# yum -y  install   memcached

2) memcached配置文件（查看即可，不需要修改）
[root@proxy ~]# vim /usr/lib/systemd/system/memcached.service   //启动配置文件
ExecStart=/usr/bin/memcached -u $USER -p $PORT -m $CACHESIZE -c $MAXCONN $OPTIONS

[root@proxy ~]# vim /etc/sysconfig/memcached    //环境变量配置文件
PORT="11211"
USER="memcached"
MAXCONN="1024"
CACHESIZE="64"
OPTIONS=""

3）启动服务并查看网络连接状态验证是否开启成功
[root@proxy ~]# systemctl  start  memcached   //端口11211


步骤二：使用telnet访问memcached服务器
1）使用yum安装telnet
[root@proxy ~]# yum -y install telnet

2)使用telnet连接服务器测试memcached服务器功能，包括增、删、改、查等操作。
[root@proxy ~]# telnet  192.168.4.5  11211
Trying 192.168.4.5...
……
##提示：0表示不压缩，180为数据缓存时间，3为需要存储的数据字节数量。
set name 0 180 3                //定义变量，变量名称为name
plj                            //输入变量的值，值为plj                
STORED
get name                        //获取变量的值
VALUE name 0 3                 //输出结果
plj
END
##提示：0表示不压缩，180为数据缓存时间，3为需要存储的数据字节数量。
add myname 0 180 10            //新建，myname不存在则添加，存在则报错
set myname 0 180 10            //添加或替换变量
replace myname 0 180 10        //替换，如果myname不存在则报错
get myname                    //读取变量
append myname 0 180 10        //向变量中追加数据
delete myname                    //删除变量
stats                        //查看状态
flush_all                        //清空所有
quit                            //退出登录      







LNMP+memcached   ————————>192.168.4.5
步骤一：部署LNMP环境部署LNMP环境并启动相关的服务
达到动静分离的效果
步骤三：创建PHP页面，使用PHP语言测试memcached服务
1）部署测试页面
[root@proxy ~]# cp /root/lnmp_soft/php_scripts/mem.php /usr/local/nginx/html/
<?php
$memcache=new Memcache;                //创建memcache对象
$memcache->connect('localhost',11211) or die ('could not connect!!');
$memcache->set('key','test');             //定义变量
$get_values=$memcache->get('key');        //获取变量值
echo $get_values;
?>
 
2）客户端测试（结果会失败）
客户端使用浏览器访问服务器PHP首页文档，检验对memcached的操作是否成功：
[root@client ~]# firefox http://192.168.4.5/test.php

注意：这里因为没有给PHP安装扩展包，默认PHP无法连接memcached数据库，需要给PHP安装扩展模块才可以连接memcached数据库。

3）为PHP添加memcache扩展
[root@proxy ~]# yum -y install  php-pecl-memcache
[root@proxy ~]# systemctl restart php-fpm

4）客户端再次测试（结果会成功显示数据结果）
[root@client ~]# firefox http://192.168.4.5/test.php








PHP的本地Session信息
步骤一：部署后端LNMP服务器相关软件并实现动静分离
web1:192.168.2.100
web2:192.168.2.200

步骤二：启动LNMP服务器相关的服务


步骤三：部署前端Nginx调度服务器
1）实现以192.168.4.5为代理服务器实现轮询代理
注：前面做了动静分离的相关实验需注释掉
2）重新加载服务

步骤四：测试环境是否配置成功
1）浏览器访问测试页面验证。
[root@client ~]# curl  http://192.168.4.5/index.html        //查看是否有数据

步骤五：部署测试页面

1）部署测试页面(Web1服务器 web2服务器）
测试页面可以参考lnmp_soft/php_scripts/php-memcached-demo.tar.gz。
[root@web1 ~]# cd lnmp_soft/php_scripts/
[root@web1 php_scripts]# tar -xf php-memcached-demo.tar.gz
[root@web1 php_scripts]# cd php-memcached-demo
[root@web1 php-memcached-demo]# cp -a  *  /usr/local/nginx/html/

2）浏览器直接访问后端服务器的测试页面（Web1服务器）。
[root@web1 ~]# firefox http://192.168.2.100            //填写账户信息
[root@web1 ~]# cd /var/lib/php/session/            //查看服务器本地的Session信息
[root@web1 ~]# ls
sess_ahilcq9bguot0vqsjtd84k7244                        //注意这里的ID是随机的
[root@web1 ~]# cat sess_ahilcq9bguot0vqsjtd84k7244

注意：可用修改index.php和home.php两个文件的内容，添加页面颜色属性，以区别后端两台不同的服务器:<body bgcolor=blue>

3）浏览器访问前端调度器测试（不同后端服务器Session不一致）真机访问测试
推荐使用google浏览器测试。
[root@room9pc01 ~]# google-chrome http://192.168.4.5/index.php
//填写注册信息后，刷新，还需要再次注册，说明两台计算机使用的是本地Session
//第二台主机并不知道你再第一台主机已经登录，第一台主机的登录信息也没有传递给第二台主机








PHP实现session共享
步骤一：构建memcached服务 (192.168.4.5上已经有本软件包，此步骤可以忽略）

步骤二：在后端LNMP服务器上部署Session共享
注意：这些操作在两台后端Web服务器上均需要执行，以下操作以Web1（192.168.2.100）服务器为例

1）为PHP添加memcache扩展
[root@web1 ~]# yum -y install  php-pecl-memcache

2）修改PHP-FPM配置文件，并重启服务
注意，因为后端两台web服务器(web1,web2)都需要修改配置文件(下面也web为例)。
[root@web1 ~]# vim  /etc/php-fpm.d/www.conf            //修改该配置文件的两个参数
//文件的最后2行
修改前效果如下:
php_value[session.save_handler] = files
php_value[session.save_path] = /var/lib/php/session
//原始文件，默认定义Sessoin会话信息本地计算机（默认在/var/lib/php/session）
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
修改后效果如下:
php_value[session.save_handler] = memcache
php_value[session.save_path] = "tcp://192.168.2.5:11211"
//定义Session信息存储在公共的memcached服务器上，主机参数中为memcache（没有d）
//通过path参数定义公共的memcached服务器在哪（服务器的IP和端口）
[root@web1 ~]# systemctl  restart  php-fpm

步骤三：客户端测试
3）浏览器访问前端调度器测试（不同后端服务器Session不一致）真机访问测试
推荐使用google浏览器测试；先清理cookie缓存
[root@room9pc01 ~]# google-chrome http://192.168.4.5/index.php、
//只需要一次登陆


